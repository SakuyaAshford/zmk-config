/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        shifted_apos: shifted_apos {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFTED_APOS";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp UNDER>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        shifted_comma: shifted_comma {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFTED_COMMA";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QMARK>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        shifted_period: shifted_period {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFTED_PERIOD";
            #binding-cells = <0>;
            bindings = <&kp PERIOD>, <&kp GT>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        shifted_minus: shifted_minus {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFTED_MINUS";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp DQT>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        shifted_slash: shifted_slash {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFTED_SLASH";
            #binding-cells = <0>;
            bindings = <&kp FSLH>, <&kp LT>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        main {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  [ ]  |
            // |       |  B  |  L  |  D   |  W   |  Z   |                   |  '   |  F    |  O    |  U   |   J   |  ; =  |
            // |       |  N  |  R  |  T   |  S   |  G   |                   |  Y   |  H    |  A    |  E   |   I   |   ,   |
            // |       |  Q  |  X  |  M   |  C   |  V   |   "["  |  |  "]"  |  K   |  P    |  .    |  -   |   /   |       |
            //                     |      |      |      |  SPACE |  | ENTER |      |       |       |

            bindings = <
&kp GRAVE                        &kp N1   &kp N2   &kp N3          &kp N4       &kp N5                               &kp N6         &kp N7       &kp N8           &kp N9          &kp N0          &kp LBKT
&caps_word                       &kp B    &kp L    &mt LEFT_ALT D  &mt LCTRL W  &kp Z                                &shifted_apos  &mt RCTRL F  &mt RIGHT_ALT O  &kp U           &kp J           &kp SEMICOLON
&mt LEFT_SHIFT NON_US_BACKSLASH  &lt 4 N  &lt 3 R  &lt 1 T         &lt 2 S      &kp G                                &kp Y          &lt 2 H      &lt 1 A          &lt 3 E         &lt 4 I         &shifted_comma
&kp LEFT_ALT                     &kp Q    &kp X    &kp M           &kp C        &kp V         &kp LBKT     &kp RBKT  &kp K          &kp P        &shifted_period  &shifted_minus  &shifted_slash  &kp RIGHT_ALT
                                                   &trans          &trans       &kp LEFT_WIN  &kp SPACE    &kp RET   &trans         &trans       &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        num+nav {
            bindings = <
&trans  &kp F1        &kp F2                 &kp F3                 &kp F4                     &kp F5                        &kp F6         &kp F7          &kp F8                  &kp F9             &kp F10        &kp F11
&trans  &kp ESC       &mt LEFT_GUI NUMBER_7  &mt LEFT_ALT NUMBER_8  &mt LEFT_CONTROL NUMBER_9  &kp PLUS                      &kp PAGE_UP    &mt RCTRL HOME  &mt RIGHT_ALT UP_ARROW  &mt RIGHT_GUI END  &kp DEL        &kp F12
&trans  &kp TAB       &kp NUMBER_4           &kp NUMBER_5           &kp NUMBER_6               &kp MINUS                     &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN                &kp RIGHT          &kp BACKSPACE  &trans
&trans  &kp NUMBER_0  &kp NUMBER_1           &kp NUMBER_2           &kp NUMBER_3               &kp PERIOD  &trans    &trans  &kp H          &kp J           &kp K                   &kp L              &kp ENTER      &trans
                                             &trans                 &trans                     &trans      &trans    &trans  &trans         &trans          &trans
            >;
        };

        sym {
            bindings = <
&kp TILDE  &kp EXCL      &kp AT                  &kp HASH               &kp DLLR             &kp PRCNT                         &kp CARET             &kp AMPS                  &kp ASTRK                  &kp LPAR   &kp RPAR           &kp LBRC
&trans     &kp ESCAPE    &mt LEFT_WIN AMPERSAND  &mt LEFT_ALT ASTERISK  &mt LCTRL SEMICOLON  &kp COLON                         &mt RCTRL PIPE        &mt RIGHT_ALT LEFT_BRACE  &mt RIGHT_GUI RIGHT_BRACE  &kp SQT    &kp DELETE         &kp RBRC
&trans     &kp TAB       &kp DOLLAR              &kp PERCENT            &kp CARET            &kp UNDERSCORE                    &kp EQUAL             &kp LEFT_PARENTHESIS      &kp RIGHT_PARENTHESIS      &kp TILDE  &kp LC(BACKSPACE)  &kp PIPE
&trans     &kp CAPSLOCK  &kp EXCLAMATION         &kp AT_SIGN            &kp HASH             &kp CAPS        &trans    &trans  &kp NON_US_BACKSLASH  &kp LEFT_BRACKET          &kp RIGHT_BRACKET          &kp SLASH  &kp ENTER          &trans
                                                 &trans                 &trans               &trans          &trans    &trans  &trans                &trans                    &trans
            >;
        };

        fun {
            bindings = <
&trans  &trans   &trans  &trans  &trans  &trans                    &trans          &trans          &trans          &trans           &trans     &trans
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &trans                    &msc SCRL_UP    &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &kp LC(Y)  &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans                    &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp LC(Z)  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans  &trans    &trans  &mkp RCLK       &mkp LCLK       &kp LC(C)       &kp LC(V)        &kp LC(X)  &trans
                         &trans  &trans  &trans  &trans    &trans  &trans          &trans          &trans
            >;
        };

        misc {
            bindings = <
&trans          &trans            &trans            &trans            &trans            &trans                              &trans            &trans            &trans     &trans     &trans  &trans
&trans          &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(NUMBER_5)                    &kp LG(NUMBER_6)  &kp LG(NUMBER_7)  &kp LG(K)  &trans     &trans  &trans
&bootloader     &trans            &bt BT_SEL 3      &bt BT_SEL 0      &trans            &trans                              &kp LC(F)         &kp LG(H)         &kp LG(J)  &kp LG(L)  &trans  &bootloader
&bt BT_CLR_ALL  &bt BT_CLR        &bt BT_SEL 0      &bt BT_SEL 1      &bt BT_SEL 2      &trans            &trans    &trans  &kp LC(LS(TAB))   &kp LC(TAB)       &trans     &trans     &trans  &trans
                                                    &trans            &trans            &trans            &trans    &trans  &trans            &trans            &trans
            >;
        };
    };
};
